{"Typealiases.html#/s:4Suas8StateKey":{"name":"StateKey","abstract":"<p>Store state is stored as a Dictionary of [StateKey: Any]</p>"},"Typealiases.html#/s:4Suas16ListenerFunction":{"name":"ListenerFunction","abstract":"<p>Callback function called when the listener state is changed</p>"},"Typealiases.html#/s:4Suas22ActionListenerFunction":{"name":"ActionListenerFunction","abstract":"<p>Callback function called when the action listener state is changed</p>"},"Typealiases.html#/s:4Suas14FilterFunction":{"name":"FilterFunction","abstract":"<p>Filter function that decides if the listener should be notified or not</p>"},"Typealiases.html#/s:4Suas13StateSelector":{"name":"StateSelector","abstract":"<p>Function that selects part of the full state</p>"},"Structs/ActionSubscription.html#/s:FV4Suas18ActionSubscription14removeListenerFT_T_":{"name":"removeListener()","abstract":"<p>Remove the listner associated with this subscription. After calling <code>removeListener</code> the listener won&rsquo;t be notified anymore.</p>","parent_name":"ActionSubscription"},"Structs/ActionSubscription.html#/s:FV4Suas18ActionSubscription15linkLifeCycleToFT6objectCSo8NSObject_T_":{"name":"linkLifeCycleTo(object:)","abstract":"<p>Link the listener associated with this subscription with an object. When the object gets deallocated the listener is removed.","parent_name":"ActionSubscription"},"Structs/Subscription.html#/s:FV4Suas12Subscription22informWithCurrentStateFT_T_":{"name":"informWithCurrentState()","abstract":"<p>Notify the listener associated with this <code>Subscription</code> about the current state. Calls the listener block without dispatching an action.</p>","parent_name":"Subscription"},"Structs/Subscription.html#/s:FV4Suas12Subscription14removeListenerFT_T_":{"name":"removeListener()","abstract":"<p>Remove the listner associated with this subscription. After calling <code>removeListener</code> the listener won&rsquo;t be notified anymore.</p>","parent_name":"Subscription"},"Structs/Subscription.html#/s:FV4Suas12Subscription15linkLifeCycleToFT6objectCSo8NSObject_T_":{"name":"linkLifeCycleTo(object:)","abstract":"<p>Link the listener associated with this subscription with an object. When the object gets deallocated the listener is removed.","parent_name":"Subscription"},"Structs/State.html#/s:FV4Suas5StatecFT10dictionaryGVs10DictionarySSP___S0_":{"name":"init(dictionary:)","abstract":"<p>Initialize a state with a dictionary</p>","parent_name":"State"},"Structs/State.html#/s:iV4Suas5State9subscriptFSSGSqP__":{"name":"subscript(_:)","abstract":"<p>Get a value for a key</p>","parent_name":"State"},"Structs/State.html#/s:FV4Suas5State5valueFT6forKeySS_GSqP__":{"name":"value(forKey:)","abstract":"<p>Get a value for a key</p>","parent_name":"State"},"Structs/State.html#/s:FV4Suas5State5valueurFT12forKeyOfTypeMx_GSqx_":{"name":"value(forKeyOfType:)","abstract":"<p>Get a value for a key of specific type</p>","parent_name":"State"},"Structs/State.html#/s:FV4Suas5State5valueurFT6forKeySS6ofTypeMx_GSqx_":{"name":"value(forKey:ofType:)","abstract":"<p>Get a value for a key of specific type</p>","parent_name":"State"},"Structs/State.html#/s:vV4Suas5State4keysGSaSS_":{"name":"keys","abstract":"<p>Return all the keys in the state.</p>","parent_name":"State"},"Structs/State.html#/s:FV4Suas5StatecFt17dictionaryLiteralGSaTSSP____S0_":{"name":"init(dictionaryLiteral:)","abstract":"<p>Initialize a State with a dictionary literal</p>","parent_name":"State"},"Structs/AsyncMiddleware.html#/s:FV4Suas15AsyncMiddlewarecFT_S0_":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"AsyncMiddleware"},"Structs/AsyncMiddleware.html#/s:FP4Suas10Middleware8onActionFT6actionPS_6Action_8getStateFT_VS_5State8dispatchFPS1__T_4nextFPS1__T__T_":{"name":"onAction(action:getState:dispatch:next:)","parent_name":"AsyncMiddleware"},"Structs/BlockAsyncAction.html#/s:FV4Suas16BlockAsyncActioncFT14executionBlockFTFT_VS_5StateFPS_6Action_T__T__S0_":{"name":"init(executionBlock:)","abstract":"<p>Undocumented</p>","parent_name":"BlockAsyncAction"},"Structs/BlockAsyncAction.html#/s:FP4Suas11AsyncAction7executeFT8getStateFT_VS_5State8dispatchFPS_6Action_T__T_":{"name":"execute(getState:dispatch:)","parent_name":"BlockAsyncAction"},"Structs/LoggerMiddleware.html#/s:FV4Suas16LoggerMiddlewarecFT13showTimestampSb12showDurationSb10lineLengthGSqSi_9predicateGSqFTVS_5StatePS_6Action__Sb_9debugOnlySb14titleFormatterGSqFTPS2__V10Foundation4DateVs6UInt64_SS_16stateTransformerGSqFS1_P__17actionTransformerGSqFPS2__P__6loggerFSST__S0_":{"name":"init(showTimestamp:showDuration:lineLength:predicate:debugOnly:titleFormatter:stateTransformer:actionTransformer:logger:)","abstract":"<p>Create a LoggerMiddleware</p>","parent_name":"LoggerMiddleware"},"Structs/LoggerMiddleware.html#/s:FP4Suas10Middleware8onActionFT6actionPS_6Action_8getStateFT_VS_5State8dispatchFPS1__T_4nextFPS1__T__T_":{"name":"onAction(action:getState:dispatch:next:)","parent_name":"LoggerMiddleware"},"Structs/LoggerMiddleware.html":{"name":"LoggerMiddleware","abstract":"<p>LoggerMiddleware that logs the action and state when each action is received"},"Structs/BlockAsyncAction.html":{"name":"BlockAsyncAction","abstract":"<p>Create an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AsyncAction.html\">AsyncAction</a></code> inline by passing a block to the init"},"Structs/AsyncMiddleware.html":{"name":"AsyncMiddleware","abstract":"<p>Async Middleware handles actions of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AsyncAction.html\">AsyncAction</a></code></p>"},"Structs/State.html":{"name":"State","abstract":"<p>Structure that represents the store state. The store state is kept as a <code>Dictionary</code> with <code>String</code> Keys and <code>Any</code> Values (<code>[String: Any]</code>)</p>"},"Structs/Subscription.html":{"name":"Subscription","abstract":"<p>Subscription structure that represents a listener subscription."},"Structs/ActionSubscription.html":{"name":"ActionSubscription","abstract":"<p>Subscription structure that represents a listener subscription."},"Protocols/Middleware.html#/s:FP4Suas10Middleware8onActionFT6actionPS_6Action_8getStateFT_VS_5State8dispatchFPS1__T_4nextFPS1__T__T_":{"name":"onAction(action:getState:dispatch:next:)","abstract":"<p>Function called when an action is dispatched</p>","parent_name":"Middleware"},"Protocols/Reducer.html#/s:vP4Suas7Reducer12initialStatewx9StateType":{"name":"initialState","abstract":"<p>Inital state value for this particular reducer","parent_name":"Reducer"},"Protocols/Reducer.html#/s:vP4Suas7Reducer8stateKeySS":{"name":"stateKey","abstract":"<p>(Optional) The state key for this reducer. If not implemented (or set) the type of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Reducer.html#/s:vP4Suas7Reducer12initialStatewx9StateType\">initialState</a></code> will be used as a key.</p>","parent_name":"Reducer"},"Protocols/Reducer.html#/s:FP4Suas7Reducer6reduceFT5statewx9StateType6actionPS_6Action__GSqwxS1__":{"name":"reduce(state:action:)","abstract":"<p>Generates a new state from the old state and an action</p>","parent_name":"Reducer"},"Protocols/SuasDynamicEquatable.html#/s:FP4Suas20SuasDynamicEquatable7isEqualFT2toP__Sb":{"name":"isEqual(to:)","abstract":"<p>Undocumented</p>","parent_name":"SuasDynamicEquatable"},"Protocols/AsyncAction.html#/s:FP4Suas11AsyncAction7executeFT8getStateFT_VS_5State8dispatchFPS_6Action_T__T_":{"name":"execute(getState:dispatch:)","abstract":"<p>Execution block that is executed in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncMiddleware.html\">AsyncMiddleware</a></code>","parent_name":"AsyncAction"},"Protocols/AsyncAction.html":{"name":"AsyncAction","abstract":"<p>Async action this type of action is intercepted by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncMiddleware.html\">AsyncMiddleware</a></code> and is not dispatched to the reducer.</p>"},"Protocols/SuasDynamicEquatable.html":{"name":"SuasDynamicEquatable","abstract":"<p>Protocol used by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbGlobal Variables.html#/s:v4Suas12EqualsFilterFTP_P__Sb\">EqualsFilter</a></code> filter callback to compare two state values."},"Protocols/Reducer.html":{"name":"Reducer","abstract":"<p>Protocol that represents a reducer</p>"},"Protocols.html#/s:P4Suas6Action":{"name":"Action","abstract":"<p>Action to dispatch to the store</p>"},"Protocols/Middleware.html":{"name":"Middleware","abstract":"<p>Middleware protocol that represents a suas store middleware"},"Functions/+(_:_:).html#/s:tF4Suasoi1pu0_RxS_7Reducer_S0_rFTxq__CS_15CombinedReducerL_2R1Mx":{"name":"R1","parent_name":"+(_:_:)"},"Functions/+(_:_:).html":{"name":"+(_:_:)","abstract":"<p>Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key.</p>"},"Functions.html#/s:F4Suasoi1pFTPS_10Middleware_PS0___PS0__":{"name":"+(_:_:)","abstract":"<p>Combines two middlewares. The combined middleware creates a chain of middleware."},"Enums/Suas.html#/s:ZFO4Suas4Suas11createStoreuRxS_7ReducerrFT7reducerx5stateGVs10DictionarySSP__10middlewareGSqPS_10Middleware___CS_5Store":{"name":"createStore(reducer:state:middleware:)","abstract":"<p>Create a store</p>","parent_name":"Suas"},"Enums/Suas.html#/s:ZFO4Suas4Suas11createStoreu0_RxS_7ReducerrFT7reducerx5stateq_10middlewareGSqPS_10Middleware___CS_5Store":{"name":"createStore(reducer:state:middleware:)","abstract":"<p>Create a store</p>","parent_name":"Suas"},"Enums/Suas.html#/s:ZFO4Suas4Suas11createStoreuRxS_7ReducerrFT7reducerx10middlewareGSqPS_10Middleware___CS_5Store":{"name":"createStore(reducer:middleware:)","abstract":"<p>Create a store.</p>","parent_name":"Suas"},"Enums/Suas.html":{"name":"Suas","abstract":"<p>Undocumented</p>"},"Global Variables.html#/s:v4Suas13defaultLoggerFSST_":{"name":"defaultLogger","abstract":"<p>Undocumented</p>"},"Global Variables.html#/s:v4Suas12alwaysFilterFTP_P__Sb":{"name":"alwaysFilter","abstract":"<p>Listener filter callback that always returns true."},"Global Variables.html#/s:v4Suas12EqualsFilterFTP_P__Sb":{"name":"EqualsFilter","abstract":"<p>Listener filter callback that returns true if the old state and the new state are not equal."},"Classes/BlockMiddleware.html#/s:FC4Suas15BlockMiddlewarecFT14actionFunctionFTPS_6Action_FT_VS_5StateFPS1__T_FPS1__T__T__S0_":{"name":"init(actionFunction:)","abstract":"<p>Create a middleware with an onAction callback block</p>","parent_name":"BlockMiddleware"},"Classes/BlockMiddleware.html#/s:FP4Suas10Middleware8onActionFT6actionPS_6Action_8getStateFT_VS_5State8dispatchFPS1__T_4nextFPS1__T__T_":{"name":"onAction(action:getState:dispatch:next:)","parent_name":"BlockMiddleware"},"Classes/Store.html#/s:vC4Suas5Store5stateVS_5State":{"name":"state","abstract":"<p>Get the current state</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store8dispatchFT6actionPS_6Action__T_":{"name":"dispatch(action:)","abstract":"<p>Dispatches an action to the store</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store11addListenerurFT12forStateTypeMx8stateKeyGSqSS_2ifGSqFTxx_Sb_8callbackFxT__GVS_12Subscriptionx_":{"name":"addListener(forStateType:stateKey:if:callback:)","abstract":"<p>Add a listener to the store. The listener will be notified when the state changes.</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store11addListenerurFT2ifGSqFTVS_5StateS1__Sb_13stateSelectorFS1_GSqx_8callbackFxT__GVS_12Subscriptionx_":{"name":"addListener(if:stateSelector:callback:)","abstract":"<p>Add a listener to the store with a stateSelector</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store11addListenerFT2ifGSqFTVS_5StateS1__Sb_8callbackFS1_T__GVS_12SubscriptionS1__":{"name":"addListener(if:callback:)","abstract":"<p>Add a listener to the store. The listener will be notified when the state changes.","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store17addActionListenerFT14actionListenerFPS_6Action_T__VS_18ActionSubscription":{"name":"addActionListener(actionListener:)","abstract":"<p>Add a new action listner to the store. Action listeners will be notified whenever a new action is dispatched.","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store5resetFT5stateP__T_":{"name":"reset(state:)","abstract":"<p>Reset the store internal state for a particular key. They key will be the dynamic type of state.</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store5resetFT5stateP_6forKeySS_T_":{"name":"reset(state:forKey:)","abstract":"<p>Reset the store internal state for a specific key</p>","parent_name":"Store"},"Classes/Store.html#/s:FC4Suas5Store14resetFullStateFGVs10DictionarySSP__T_":{"name":"resetFullState(_:)","abstract":"<p>Resets the full internal state with a new state</p>","parent_name":"Store"},"Classes/CombinedReducer.html#/s:vP4Suas7Reducer12initialStatewx9StateType":{"name":"initialState","parent_name":"CombinedReducer"},"Classes/CombinedReducer.html#/s:FP4Suas7Reducer6reduceFT5statewx9StateType6actionPS_6Action__GSqwxS1__":{"name":"reduce(state:action:)","parent_name":"CombinedReducer"},"Classes/BlockReducer.html#/s:vC4Suas12BlockReducer12initialStatex":{"name":"initialState","abstract":"<p>Inital state value for this particular reducer","parent_name":"BlockReducer"},"Classes/BlockReducer.html#/s:vC4Suas12BlockReducer8stateKeySS":{"name":"stateKey","abstract":"<p>(Optional) The state key for this reducer. If not implemented (or set) the type of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/BlockReducer.html#/s:vC4Suas12BlockReducer12initialStatex\">initialState</a></code> will be used as a key.</p>","parent_name":"BlockReducer"},"Classes/BlockReducer.html#/s:FC4Suas12BlockReducercFT12initialStatex6reduceFTxPS_6Action__GSqx__GS0_x_":{"name":"init(initialState:reduce:)","abstract":"<p>Create a reducer with a state and a reduce function</p>","parent_name":"BlockReducer"},"Classes/BlockReducer.html#/s:FC4Suas12BlockReducercFT12initialStatex8stateKeySS6reduceFTxPS_6Action__GSqx__GS0_x_":{"name":"init(initialState:stateKey:reduce:)","abstract":"<p>Create a reducer with a state, a state key, and a reduce function</p>","parent_name":"BlockReducer"},"Classes/BlockReducer.html#/s:FP4Suas7Reducer6reduceFT5statewx9StateType6actionPS_6Action__GSqwxS1__":{"name":"reduce(state:action:)","parent_name":"BlockReducer"},"Classes/BlockReducer.html":{"name":"BlockReducer","abstract":"<p>Create a reducer inline with a block</p>"},"Classes/CombinedReducer.html":{"name":"CombinedReducer","abstract":"<p>Reducer that represents a combination of two reducers"},"Classes/Store.html":{"name":"Store","abstract":"<p>Store that contains the application state, the reducer logic, the middleware and the listeners</p>"},"Classes/BlockMiddleware.html":{"name":"BlockMiddleware","abstract":"<p>Create a middleware inline with a block.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}